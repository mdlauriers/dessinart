/* This file was generated by SableCC (http://www.sablecc.org/). */

package dessinart.syntax.analysis;

import dessinart.syntax.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAProgram(AProgram node);
    void caseADefs(ADefs node);
    void caseADefcan(ADefcan node);
    void caseADefpen(ADefpen node);
    void caseAMain(AMain node);
    void caseABlock(ABlock node);
    void caseADeclInstr(ADeclInstr node);
    void caseAAssignInstr(AAssignInstr node);
    void caseAPenfctInstr(APenfctInstr node);
    void caseAIfInstr(AIfInstr node);
    void caseAWhileInstr(AWhileInstr node);
    void caseAReturnInstr(AReturnInstr node);
    void caseACallInstr(ACallInstr node);
    void caseAReplacePenfct(AReplacePenfct node);
    void caseAMovePenfct(AMovePenfct node);
    void caseADrawabsPenfct(ADrawabsPenfct node);
    void caseADrawPenfct(ADrawPenfct node);
    void caseASetcolorPenfct(ASetcolorPenfct node);
    void caseASetwidthPenfct(ASetwidthPenfct node);
    void caseADecls(ADecls node);
    void caseAFctDecl(AFctDecl node);
    void caseAVariableDecl(AVariableDecl node);
    void caseAVardecl(AVardecl node);
    void caseAFunctionFctdecl(AFunctionFctdecl node);
    void caseASketchFctdecl(ASketchFctdecl node);
    void caseAParams(AParams node);
    void caseAAdditionalParam(AAdditionalParam node);
    void caseAParam(AParam node);
    void caseAEqExp(AEqExp node);
    void caseALtExp(ALtExp node);
    void caseAGtExp(AGtExp node);
    void caseASimpleExp(ASimpleExp node);
    void caseAAddSum(AAddSum node);
    void caseASubSum(ASubSum node);
    void caseADivSum(ADivSum node);
    void caseAMulSum(AMulSum node);
    void caseAModSum(AModSum node);
    void caseASimpleSum(ASimpleSum node);
    void caseANotNeg(ANotNeg node);
    void caseATermNeg(ATermNeg node);
    void caseANumberTerm(ANumberTerm node);
    void caseANegativeTerm(ANegativeTerm node);
    void caseAVarTerm(AVarTerm node);
    void caseABoolTerm(ABoolTerm node);
    void caseAParTerm(AParTerm node);
    void caseAColorTerm(AColorTerm node);
    void caseAMathfctsTerm(AMathfctsTerm node);
    void caseACallTerm(ACallTerm node);
    void caseATrueBoole(ATrueBoole node);
    void caseAFalseBoole(AFalseBoole node);
    void caseAIntType(AIntType node);
    void caseABooleanType(ABooleanType node);
    void caseAColorType(AColorType node);
    void caseAArgs(AArgs node);
    void caseAAdditionalArg(AAdditionalArg node);
    void caseAArg(AArg node);
    void caseAPowerMathfcts(APowerMathfcts node);
    void caseARound5Mathfcts(ARound5Mathfcts node);
    void caseARound10Mathfcts(ARound10Mathfcts node);
    void caseARound100Mathfcts(ARound100Mathfcts node);
    void caseALogMathfcts(ALogMathfcts node);
    void caseASinMathfcts(ASinMathfcts node);
    void caseACosMathfcts(ACosMathfcts node);
    void caseATanMathfcts(ATanMathfcts node);

    void caseTAssign(TAssign node);
    void caseTDivide(TDivide node);
    void caseTLBr(TLBr node);
    void caseTLPar(TLPar node);
    void caseTMod(TMod node);
    void caseTMinus(TMinus node);
    void caseTPlus(TPlus node);
    void caseTRBr(TRBr node);
    void caseTRPar(TRPar node);
    void caseTStar(TStar node);
    void caseTSc(TSc node);
    void caseTComma(TComma node);
    void caseTDot(TDot node);
    void caseTNot(TNot node);
    void caseTEq(TEq node);
    void caseTLt(TLt node);
    void caseTGt(TGt node);
    void caseTDo(TDo node);
    void caseTEnd(TEnd node);
    void caseTFor(TFor node);
    void caseTWhile(TWhile node);
    void caseTFalse(TFalse node);
    void caseTTrue(TTrue node);
    void caseTElif(TElif node);
    void caseTIf(TIf node);
    void caseTThen(TThen node);
    void caseTReturn(TReturn node);
    void caseTCanvas(TCanvas node);
    void caseTPencil(TPencil node);
    void caseTColor(TColor node);
    void caseTDefine(TDefine node);
    void caseTImport(TImport node);
    void caseTDessinart(TDessinart node);
    void caseTSketch(TSketch node);
    void caseTFunc(TFunc node);
    void caseTInt(TInt node);
    void caseTDouble(TDouble node);
    void caseTBoolean(TBoolean node);
    void caseTReplace(TReplace node);
    void caseTMove(TMove node);
    void caseTDraw(TDraw node);
    void caseTDrawTo(TDrawTo node);
    void caseTSetColor(TSetColor node);
    void caseTSetWidth(TSetWidth node);
    void caseTPower(TPower node);
    void caseTRoundfive(TRoundfive node);
    void caseTRoundten(TRoundten node);
    void caseTRoundhund(TRoundhund node);
    void caseTSin(TSin node);
    void caseTCos(TCos node);
    void caseTTan(TTan node);
    void caseTLog(TLog node);
    void caseTBlank(TBlank node);
    void caseTComment(TComment node);
    void caseTCommentMulti(TCommentMulti node);
    void caseTIdent(TIdent node);
    void caseTNumber(TNumber node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
