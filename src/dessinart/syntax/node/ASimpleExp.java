/* This file was generated by SableCC (http://www.sablecc.org/). */

package dessinart.syntax.node;

import dessinart.syntax.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleExp extends PExp
{
    private PSum _sum_;

    public ASimpleExp()
    {
        // Constructor
    }

    public ASimpleExp(
        @SuppressWarnings("hiding") PSum _sum_)
    {
        // Constructor
        setSum(_sum_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleExp(
            cloneNode(this._sum_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleExp(this);
    }

    public PSum getSum()
    {
        return this._sum_;
    }

    public void setSum(PSum node)
    {
        if(this._sum_ != null)
        {
            this._sum_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sum_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._sum_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._sum_ == child)
        {
            this._sum_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._sum_ == oldChild)
        {
            setSum((PSum) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
